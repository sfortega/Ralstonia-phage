#########
###1. SOIL MICROBIOME ANALYSIS prepare files and phyloseq object
########

library(vegan)
library(tidyverse)
library(phyloseq)
setwd("..")
table=read.table("featureTable.sample.total.absolute.txt",header=T,sep="\t")
rownames(table)<-table$OTU_num
soil_DNA_weight=read.table("soil_DNA_weight",header=T,sep="\t")
##two samples were named 049---one is the number 4 and the other the 49 first PY04 and the second is PYO4.PYO45
groups=read.table("groups_no_49.txt",header=T,sep="\t") ####not having 49
rownames(groups)<-groups$SampleName
###remove 49 bec
table2 <- table[,!names(table) %in% c("FERA.49", "FERA.49.2")]
table_t=as.data.frame(t(table2[,c(2:155)]))
table_t$sample<-rownames(table_t)

table_t_combine=left_join(table_t, soil_DNA_weight,by=c("sample"="sample"))
###now normalize by dividing each 
data2_2 <- mutate_all(table_t_combine, function(x) as.numeric(as.character(x)))###convert all numeric, have 154 samples, 55577 OTUs
####divide all for the DNA amount used to extract the DNA
data3<- data2_2 %>%
      mutate(across(-c(sample,DNA) , ~ ./DNA))

###add column with name of samples to later tranverse table
rownames(table_t)->samples
data3_t=as.data.frame(t(data3))
colnames(data3_t)<-c(samples)
write.table(data3_t,"absolute_abundance_after_DNA.txt",sep="\t") ####final abundance considering soil amount

data3_t=read.table("absolute_abundance_after_DNA.txt",sep="\t")
data_final=data3_t
data_final2=data_final[c(1:55575),]


### follow https://thejacksonlaboratory.github.io/microbiome-workshop-2018/jekyll/update/2018/11/15/Analysing-16S-data-part-2.html

m_count <- as.matrix(data_final2)
taxa=read.table("taxa",header=T,sep="\t")
taxa$Kingdom=sub("k__","",taxa$Kingdom)
taxa$Phylum=sub("p__","",taxa$Phylum)
taxa$Class=sub("c__","",taxa$Class)
taxa$Order=sub("o__","",taxa$Order)
taxa$Family=sub("f__","",taxa$Family)
taxa$Genus=sub("g__","",taxa$Genus)
taxa$Species=sub("s__","",taxa$Species)
rownames(taxa)<-taxa$OTU_num
m_tax <- as.matrix(taxa)
OTU <- otu_table(m_count, taxa_are_rows=TRUE)
TAX <- tax_table(m_tax)
MD <- sample_data(groups)
## Generate the phyloseq object
physeq <- phyloseq(OTU, TAX, MD)

#phyloseq-class experiment-level object
#otu_table()   OTU Table:         [ 55575 taxa and 154 samples ]
#sample_data() Sample Data:       [ 152 samples by 6 sample variables ]
#tax_table()   Taxonomy Table:    [ 55575 taxa by 2 taxonomic ranks ]


####normalize
# get the median number of counts per sample

total =as.data.frame(colSums(data_final2))
colnames(total)<-c("mean")
total_median = median(total$mean)
# create a custom R function to normalize data
myFunction = function(x, t=total_median) round(t * (x / sum(x)))

# use transform_sample_counts() to apply your custom function to the count data
physeq_norm = transform_sample_counts(physeq, myFunction)
save.image(file = "phyloseq.RData")



############
######create a phylogenetic tree
####add tree
library(ape)
tree=read.tree("tree.nwk")
physeq@phy_tree<-tree

total =as.data.frame(colSums(data_final2))
colnames(total)<-c("mean")
total_median = median(total$mean)
# create a custom R function to normalize data
myFunction = function(x, t=total_median) round(t * (x / sum(x)))

# use transform_sample_counts() to apply your custom function to the count data
physeq_norm = transform_sample_counts(physeq, myFunction)
save.image(file = "phyloseq.RData")



################
###2. Alpha diversity
################

setwd("..")

library(vegan)
library(tidyverse)
library(phyloseq)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(FSA)
library(rcompanion)

load(file = "phyloseq.RData")

pruned <- prune_taxa(taxa_sums(physeq) > 0, physeq)

#otu_table()   OTU Table:         [ 55131 taxa and 154 samples ]
#sample_data() Sample Data:       [ 154 samples by 10 sample variables ]
#tax_table()   Taxonomy Table:    [ 55131 taxa by 8 taxonomic ranks ]
#phy_tree()    Phylogenetic Tree: [ 55131 tips and 54890 internal nodes ]

###now define groups

sample_data(pruned)$category <- factor(groups$category2)
OTU_table=as.data.frame(t(physeq@otu_table))

###########https://scienceparkstudygroup.github.io/microbiome-lesson/04-alpha-diversity/index.html
OTU_table2= transform_sample_counts(physeq@otu_table, as.integer)
OTU_table3=as.data.frame(t(OTU_table2))
data_richness <- estimateR(OTU_table3)                                            # calculate richness and Chao1 using vegan package
data_evenness <- diversity(OTU_table) / log(specnumber(OTU_table))                # calculate evenness index using vegan package
data_shannon <- diversity(OTU_table, index = "shannon")                          # calculate Shannon index using vegan package
data_alphadiv <- cbind(MD, t(data_richness), data_shannon, data_evenness) # combine all indices in one data table
write.table(data_alphadiv,"data_alphadiv_all.txt",sep="\t")
data_alphadiv_read=read.table("data_alphadiv_all.txt",sep="\t",header=T)

####################STATS

data_alphadiv=data_alphadiv_read[-grep("JI|Compost", data_alphadiv_read$category3),] ###142 samples

data_alphadiv$Phages=sub("1-Phage","1.Phage",data_alphadiv$Phages)
data_alphadiv$Phages=sub("2-Phages","2.Phages",data_alphadiv$Phages)
data_alphadiv$Phages=factor(data_alphadiv$Phages,levels=c("Negative_control","1.Phage","2.Phages","Rs.UW551"))

####TEST PHAGES
model  <- lm(data_shannon ~ Phages, data = data_alphadiv)
shapiro_test(residuals(model)) ####non normally distributed 
####no ANOVA use KRUSKALL WALLIs
res.kruskal <- data_alphadiv %>% kruskal_test(data_shannon ~ Phages)
res.kruskal

##data_shannon   142      18.1     3 0.000417 Kruskal-Wallis

#####   data_shannon   142      18.1     3 0.000417 Kruskal-Wallis
pwc2 <-   dunnTest(data_shannon ~ Phages, data=data_alphadiv,method = "bonferroni")
pwc2_res<-pwc2$res
cld <- cldList(comparison = pwc2_res$Comparison,
        p.value    = pwc2_res$P.adj,
        threshold  = 0.05)[1:2]

names(cld)[1]<-"Phages" # change the name of grouping factor according to the dataset (df)
cld
cld$Phages=sub("1.Phage","1-Phage",cld$Phages)
cld$Phages=sub("2.Phages","2-Phages",cld$Phages)

color_table <-  tibble(
  Group_Name = c("Negative_control","1-Phage","2-Phages","Rs.UW551"),
  Color = c("#666666","#E69F00","#0072B2","#882255")  )

ylim1=1.5*(max(data_alphadiv$data_shannon))
ylim2=1.2*(max(data_alphadiv$data_shannon))
data_alphadiv$Phages=sub("1.Phage","1-Phage",data_alphadiv$Phages)
data_alphadiv$Phages=sub("2.Phages","2-Phages",data_alphadiv$Phages)

tiff("Shannon_stats_Phages.tiff",res=300,he=200,wi=200,units="mm")
 ggboxplot(data=data_alphadiv,, x = "Phages", y = "data_shannon",
  fill = "Phages")+ ylim(0,ylim1)+ theme_bw() +
  geom_text(data = cld, aes(label = cld$Letter, y = ylim2, x = Phages), 
            vjust = -0.5,
            hjust= 0.5,
            fontface = "bold",
            size=8.5,
            check_overlap = F)+scale_fill_manual(values = color_table$Color)+
 ylab("Shannon index")+ theme(strip.text.x = element_text(size = 30))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme(text = element_text(size = 25))
dev.off()
  scale_x_discrete(labels = NULL, breaks = NULL)



######Test alpha diversity according to Healthy and diseased
data_alphadiv$category3=factor(data_alphadiv$category3, levels=c("Negative_control","Healthy", "Diseased"))
model  <- lm(data_shannon ~ category3, data = data_alphadiv)
shapiro_test(residuals(model)) ####non normally distributed 
####no ANOVA use KRUSKALL WALLIs
anova=aov(data_shannon ~ category3, data=data_alphadiv)
summary(anova)
#             Df Sum Sq Mean Sq F value   Pr(>F)    
#category3     2  28.93  14.465   22.88 2.57e-09 ***
#Residuals   139  87.87   0.632                     
#---
#Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1


tukey <-   glht(anova,  linfct = mcp(category3= "Tukey"))
cld <- cld(tukey)
cld2<-as.data.frame(cld$mcletters$Letters)
cld2$Treatment<-rownames(cld2)
colnames(cld2)=c("Letter","category3")
cld2$category3=factor(cld2$category3, levels=c("Negative_control","Healthy", "Diseased"))

color_table2 <-  tibble(
  Treatment = c("Negative_control","Healthy", "Diseased"),
  Color = c("#777777", "#44AA99","black"))


ylim1=1.5*(max(data_alphadiv$data_shannon))
ylim2=1.2*(max(data_alphadiv$data_shannon))
tiff("Shannon_stats_H_D.tiff",res=300,he=200,wi=200,units="mm")
 ggboxplot(data=data_alphadiv, x = "category3", y = "data_shannon",
  fill = "category3")+ ylim(0,ylim1)+ theme_bw() +
  geom_text(data = cld2, aes(label = cld2$Letter, y = ylim2, x = category3), 
            vjust = -0.5,
            hjust= 0.5,
            fontface = "bold",
            size=8.5,
            check_overlap = F)+scale_fill_manual(values = color_table2$Color)+
 ylab("Shannon index")+ theme(strip.text.x = element_text(size = 30))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme(text = element_text(size = 25))
dev.off()





################
###3. Beta diversity
################

OTU_table=as.data.frame(t(physeq@otu_table))
OTU_table2= transform_sample_counts(physeq@otu_table, as.integer)
OTU_table3=as.data.frame(t(OTU_table2))
data_richness <- estimateR(OTU_table3)  ###this done for alpha
data_phylo_filt = filter_taxa(physeq, function(x) sum(x > 2) > (0.11 * length(x)), TRUE)
set.seed(2747) # set seed for analysis reproducibility

OTU_filt_rar = rarefy_even_depth(otu_table(data_phylo_filt), rngseed = TRUE, replace = T) # rarefy the raw data using Phyloseq package
data_otu_filt_rar = data.frame(otu_table(OTU_filt_rar)) # create a separated file
data_phylo_filt_rar <- phyloseq(OTU_filt_rar, TAX, MD)
#otu_table()   OTU Table:         [ 2747 taxa and 154 samples ]
#sample_data() Sample Data:       [ 154 samples by 10 sample variables ]
#tax_table()   Taxonomy Table:    [ 2747 taxa by 8 taxonomic ranks ]
to_remove <- c("JI1", "JI2", "JI3", "JI4", "JI5", "JI6", "BEFORE.1", "BEFORE.2", "BEFORE.3", "BEFORE.4", "BEFORE.5", "BEFORE.6")
data_phylo_filt_rar2 <- prune_samples(!(sample_names(data_phylo_filt_rar) %in% to_remove),data_phylo_filt_rar)
data_phylo_filt_rar<-data_phylo_filt_rar2

sample_data(data_phylo_filt_rar)$category3=factor(sample_data(data_phylo_filt_rar)$category3,levels=c("Negative_control","Healthy","Diseased"))
sample_data(data_phylo_filt_rar)$category_phages=factor(sample_data(data_phylo_filt_rar)$category_phages,levels=c("Negative_control","1-Phage_Healthy","1-Phage_Diseased","2-Phages_Healthy","2-Phages_Diseased","Rs.UW551_Healthy","Rs.UW551_Diseased"))
sample_data(data_phylo_filt_rar)$Phages=factor(sample_data(data_phylo_filt_rar)$Phages,levels=c("Negative_control","1-Phage","2-Phages","Rs.UW551"))



###########https://scienceparkstudygroup.github.io/microbiome-lesson/04-alpha-diversity/index.html
metadata=data.frame(data_phylo_filt_rar@sam_data) ###dont do as.data.frame but instead dada.frame https://github.com/joey711/phyloseq/issues/190
#####test if groups are different with PERMANOVA https://data.marcoplebani.com/annotated-code-for-performing-multivariate-statistics/
library(devtools)
if (!require(pairwiseAdonis)) install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)


####Adonis
OTU_filt_rar2=subset(OTU_filt_rar, select = !(colnames(OTU_filt_rar) %in% to_remove))
data_otu_filt_rar_DF = data.frame(t(OTU_filt_rar2))
adonis_category=adonis2(data_otu_filt_rar_DF ~ Phages,data=metadata, permutations=999, method="bray")
#Permutation test for adonis under reduced model
#Terms added sequentially (first to last)
#Permutation: free
#Number of permutations: 999

#adonis2(formula = data_otu_filt_rar_DF ~ Phages, data = metadata, permutations = 999, method = "bray")
#          Df SumOfSqs      R2      F Pr(>F)    
#Phages     3   4.5331 0.15653 8.5368  0.001 ***
#Residual 138  24.4267 0.84347                  
#Total    141  28.9598 1.00000                  
#---
#Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1


#####Pairwise I_D
iris.adonis.pw <- pairwise.adonis(x = data_otu_filt_rar_DF,
                    factors= metadata$Phages,
                    sim.method='euclidean',
                    p.adjust.m='holm',perm = 999)
iris.adonis.pw <- as.data.frame(iris.adonis.pw)
iris.adonis.pw$F.Model <- round(iris.adonis.pw$F.Model, 2)
iris.adonis.pw$R2 <- round(iris.adonis.pw$R2, 2)
iris.adonis.pw



#                         pairs Df  SumsOfSqs F.Model   R2 p.value p.adjusted sig
#1           1-Phage vs 2-Phages  1 4878388848   18.80 0.14   0.001      0.006   *
#2 1-Phage vs Negative_control  1 3375366962   12.36 0.18   0.001      0.006   *
#3         1-Phage vs Rs.UW551  1 4180638421   14.16 0.20   0.001      0.006   *
#4     2-Phages vs Negative_control  1  876725582    4.53 0.05   0.013      0.024   .
#5             2-Phages vs Rs.UW551  1  928742155    4.44 0.05   0.012      0.024   .
#6   Negative_control vs Rs.UW551  1 1154742379   10.49 0.32   0.001      0.006   *


OTU_filt_rar2=subset(OTU_filt_rar, select = !(colnames(OTU_filt_rar) %in% to_remove))
NMDS <- metaMDS(as.data.frame(t(OTU_filt_rar2)))
NMDS


#Dimensions: 2 
#Stress:     0.1044661 

metaMDS(comm = as.data.frame(t(OTU_filt_rar2)))
groups2<-groups
groups2=groups[-grep("JI|Compost", groups$category3),] ###142 samples
groups2$Phages=factor(groups2$Phages,levels=c("Negative_control","1-Phage","2-Phages","Rs.UW551"))


plot_df <- scores(NMDS, display = "sites") %>% 
  as.data.frame() %>% 
  rownames_to_column("SampleName") %>% 
  full_join(groups2, by = "SampleName")


data.scores = as.data.frame(scores(NMDS)$species)
data.scores.sites = as.data.frame(scores(NMDS)$sites)
data.scores.sites$SampleName=rownames(data.scores.sites)
write.table(data.scores.sites,"NMDS_coordinates_samples.txt",sep="\t",col.names=T)
data.scores.sites=read.table("NMDS_coordinates_samples.txt",sep="\t",header=T)


table1=data.scores.sites
groups=read.table("groups_no_49.txt",header=T,sep="\t") ####not having 49
table2=left_join(table1,groups,by="SampleName")
table2$NMD1_position=with(table2, ifelse(table2$NMDS1 >0, "shifted","centered"))
table2$Phage_NMDS1=paste(table2$Phages,"_",table2$NMD1_position)
table2$Phage_NMDS1=sub(" ","", table2$Phage_NMDS1)
table2$Phage_NMDS1=sub(" ","", table2$Phage_NMDS1)



color_table <-  tibble(
  Group_Name = c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"),
  Color = c("#666666","#E69F00","#D55E00","#6699CC","#0072B2","#882255"))

table2$Phage_NMDS1=factor(table2$Phage_NMDS1,levels=c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"))
 
tiff("NMDS1_Phages_NMDS1.tiff",res=300,he=200,wi=200,units="mm")
ggplot(table2, aes(x = NMDS1, y = NMDS2, color = Phage_NMDS1)) +
  geom_point(size = 5, alpha = 0.8) +
  scale_color_manual(values =  color_table$Color) +
  stat_ellipse(linetype = 2, size = 2) + theme( text = element_text(size = 21))
dev.off()


##################
###3. Correlations with NMDS1 and NMDS2 Figure S4
##################

##################
###3.1 Correlations between Ralstonia and NMDS1 and NMDS2
##################
########Divide into shifted and centered find if there are correlation between Rs and NMDS1 and Rs and NMDS2


data_genus=read.table("RF_topall_samples_final_genus.txt",sep="\t",header=T) ###after analysis the RF
data_genus$Group_Name=sub("BEFORE","Compost",data_genus$Group_Name)
data_genus$Group_Name=sub("Ralstonia","Rs.UW551",data_genus$Group_Name)
data_genus$Group_Name=sub("Control","Negative_control",data_genus$Group_Name)

table=read.table("table_phages_all12_menos2.txt",header=T,sep="\t")
table=table[,c(1:4)]
table_data=left_join(data_genus, table, by="SampleName")

write.table(table_data, "table_phages_all12_menos2_Genus.txt",col.names=T,sep="\t")
table_data->table2
table3=table2%>%filter(Phages=="1-Phage" | Phages=="2-Phages")
table3$Phages=factor(table3$Phages,levels=c("1-Phage","2-Phages"))
table3$log_Ralstonia=log(table3$Ralstonia)

library(ggpmisc)
library(flextable)
my.formula <- y ~ x

ylabel=substitute(expr = paste(italic(Ralstonia), " abundance (counts)"), 
                      env = list(i=i))
tiff("correlation_Ralstonia_NMDS1_no_groups.tiff",res=300,he=200,wi=200,units="mm")
ggscatter(table3, x ="NMDS1" , y = "log_Ralstonia", color="Phages", palette=c("#E69F00","#0072B2"),
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",cor.coef.size = 7.8,
          xlab = "NMDS1", ylab = c(ylabel))+ theme( text = element_text(size = 25))+ facet_wrap(. ~ Phages)
dev.off()

               

tiff("correlation_Ralstonia_NMDS2_no_groups.tiff",res=300,he=200,wi=200,units="mm")
ggscatter(table3, x = "NMDS2", y = "log_Ralstonia",  color="Phages", palette=c("#E69F00","#0072B2"),
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",cor.coef.size = 8.8,
          xlab = "NMDS2", ylab = c(ylabel))+ theme( text = element_text(size = 25))+ facet_wrap(. ~ Phages)
dev.off()





##################
###3.2 Correlations between Phages and NMDS1 and NMDS2
##################
########Divide into shifted and centered find if there are correlation between phages and NMDS1 and Rs and NMDS2
table3=table2%>%filter(Phages=="1-Phage" | Phages=="2-Phages")
table3$Phages=factor(table3$Phages,levels=c("1-Phage","2-Phages"))
table3=table3[,c(1,9,11,35,45)]
table3$log_Ralstonia=log(table3$Ralstonia)
##table4=left_join(table3,data.scores.sites, by="SampleName")
table3$PFU_ml=table3$PFU_ml+0.001
table3$log_PFU=log(table3$PFU_ml)


tiff("correlation_log_phages_NMDS1_no_groups.tiff",res=300,he=200,wi=200,units="mm")
ggscatter(table3, x = "NMDS1", y = "log_PFU",  color="Phages", palette=c("#E69F00","#0072B2"), 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",cor.coef.size = 8.8,
          xlab = "NMDS1", ylab = "Phage abundance (log(PFU/ml))")+ theme( text = element_text(size = 25))+ facet_wrap(. ~ Phages)
dev.off()

tiff("correlation_log_phages_NMDS2_no_groups.tiff",res=300,he=200,wi=200,units="mm")
ggscatter(table3, x ="NMDS2" , y = "log_PFU",  color="Phages", palette=c("#E69F00","#0072B2"), 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "pearson",cor.coef.size = 8.8,
          xlab = "NMDS2", ylab = "Phage abundance (log(PFU/ml))")+ theme( text = element_text(size = 25))+ facet_wrap(. ~ Phages)
dev.off()


##################
###4. Treatments according to 1-Phage and 2-Phages phage treatmenet and shifted and centered-Figure S5
##################

##################
###4.1 Healthy and diseased plants according to 1-Phage and 2-Phages phage treatmenet and shifted and centered
##################
table3=table2%>%filter(Phages=="1-Phage" | Phages=="2-Phages")
table3$Phages=factor(table3$Phages,levels=c("1-Phage","2-Phages"))

table3$log_Ralstonia=log(table3$Ralstonia)
table4=left_join(table3,data.scores.sites, by="SampleName")


table6=table4 %>% group_by(Phage_NMDS1, category3)  %>%     dplyr::summarise(count=n()) 
table6=table6%>%    mutate(per =  100 *count/sum(count))

table6=as.data.frame(table6)
table6$category3=factor(table6$category3,levels=c("Negative_control","Healthy","Diseased"))
table6$per=round(table6$per, digits=1)
table6$percentage=paste(table6$per, "%")
table6

# Phage_NMDS1          category3 count   per
#  <chr>                <fct>     <int> <dbl>
#1 2-Phages_centered      Healthy      30  52.6
#2 2-Phages_centered      Diseased     27  47.4
#3 2-Phages_shifted     Healthy       8  57.1
#4 2-Phages_shifted     Diseased      6  42.9
#5 1-Phage_centered  Healthy      13  68.4
#6 1-Phage_centered  Diseased      6  31.6
#7 1-Phage_shifted Healthy      19  67.9
#8 1-Phage_shifted Diseased      9  32.1

#####plot

table6$Phage_NMDS1=factor(table6$Phage_NMDS1,levels=c("1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted"))
tiff("barplot_DI_I_D_NMDS1_coordinate.tiff",res=300,he=200,wi=250,units="mm")
ggplot(data=table6, aes(x=Phage_NMDS1, y=count,fill=category3)) +
geom_bar(stat="identity", position="stack") +
 geom_text(aes(label = percentage),
            position = position_stack(vjust = 0.5), size = 10) +
    scale_fill_manual(values=c("#44AA99","black")) +
       labs(x = "Treatment",
         y = "Counts")+ theme(strip.text.x = element_text(size = 30))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme( text = element_text(size = 25))
dev.off()

#######check X-square.tests
####ARE THERE MORE HEALTHY in the 1-Phage shifted --->NO
res <- prop.test(x = 19, n = 32, p = 0.5, correct = FALSE, alternative = "less")
res$p.value
####ARE THERE MORE DISEASE in the 1-Phage shifted --->NO
res <- prop.test(x = 9, n = 15, p = 0.5, correct = FALSE, alternative = "less")
res$p.value

##################
###4.2 Percentage of each of the 10 phage treatments according to 1-Phage and 2-Phages phage treatmenet and shifted and centered
##################

######check if thre is more proportion of some phage treatments
table3=table2%>%filter(Phages=="1-Phage" | Phages=="2-Phages")
table3$Phages=factor(table3$Phages,levels=c("1-Phage","2-Phages"))
table3=table3[,c(1,4,8,9,11,17,35,45,46)] ###needs group name
table3$log_Ralstonia=log(table3$Ralstonia)
table4=left_join(table3,data.scores.sites, by="SampleName")

table6=table4 %>% group_by(Phage_NMDS1, Group_Name)  %>%     dplyr::summarise(count=n())
table6=table6%>%    mutate(per =  100 *count/sum(count))

table6=as.data.frame(table6)
table6$Group_Name=factor(table6$Group_Name,levels=c("Negative_control","PYO4","PYO45","PYO59","PYO65","PYO4.PYO45","PYO4.PYO59","PYO4.PYO65","PYO45.PYO59","PYO45.PYO65","PYO59.PYO65","Rs.UW551"))

table6$per=round(table6$per, digits=1)
table6$percentage=paste(table6$per, "%")

tiff("barplot_NMDS1_coordinate_phage_treatment.tiff",res=300,he=280,wi=250,units="mm")
ggplot(data=table6, aes(x=Phage_NMDS1, y=count,fill=Group_Name)) +
geom_bar(stat="identity", position="stack") +
   geom_text(aes(label = percentage),
            position = position_stack(vjust = 0.5), size = 9) +
 scale_fill_manual(values=c("#CC6677","#AA4499","#6699CC","#332288","#DDCC77","#117733","#661100","#44AA99", "#0072B2","#D55E00")) +
           labs(x = "Treatment",
         y = "Counts")+ theme(strip.text.x = element_text(size = 30))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme( text = element_text(size = 25))
dev.off()


#            Phage_NMDS1  Group_Name count
#1       2-Phages_centered  PYO4.PYO45     8
#2       2-Phages_centered  PYO4.PYO59     9
#3       2-Phages_centered  PYO4.PYO65     7
#4       2-Phages_centered PYO45.PYO59     9
#5       2-Phages_centered PYO45.PYO65    12
#6       2-Phages_centered PYO59.PYO65    12
#7      2-Phages_shifted  PYO4.PYO45     3
#8      2-Phages_shifted  PYO4.PYO59     3
#9      2-Phages_shifted  PYO4.PYO65     5
#10     2-Phages_shifted PYO45.PYO59     3
#11  1-Phage_centered        PYO4     4
#12  1-Phage_centered       PYO45     4
#13  1-Phage_centered       PYO59     7
#14  1-Phage_centered       PYO65     4
#15 1-Phage_shifted        PYO4     7
#16 1-Phage_shifted       PYO45     8
#17 1-Phage_shifted       PYO59     5
#18 1-Phage_shifted       PYO65     8
#19    Rs.UW551_centered    Rs.UW551    12


#######check X-square.tests
###1-Phage more 04, 045, 065, less 059?
res <- prop.test(x = 7, n = 28, p = 0.211, correct = FALSE, alternative = "greater") ##04
res$p.value
[1] 0.3065046

res <- prop.test(x = 8, n = 28, p = 0.211, correct = FALSE, alternative = "greater") ##045
res$p.value
[1] 0.1662842

res <- prop.test(x = 8, n = 28, p = 0.211, correct = FALSE, alternative = "greater")  ###059
res$p.value
[1] 0.1662842

res <- prop.test(x = 5, n = 28, p = 0.3684, correct = FALSE, alternative = "less") ###065
res$p.value

#        1-sample proportions test without continuity correction
#data:  5 out of 28, null probability 0.3684
#X-squared = 4.3363, df = 1, p-value = 0.01865
#alternative hypothesis: true p is less than 0.3684
#95 percent confidence interval:
# 0.0000000 0.3240547
#sample estimates:
#        p 
#0.1785714  ######significant


###2-Phages phage treatments
res <- prop.test(x = 3, n = 57, p = 0.14, correct = FALSE, alternative = "less") ##PYO4.PYO45
res$p.value
#[1]0.02865199
#X-squared = 3.6137, df = 1, p-value = 0.02865


res <- prop.test(x = 3, n = 57, p = 0.158 ,correct = FALSE, alternative = "less") ##PYO4.PYO59
res$p.value
#[1]0.001459
#X-squared = 4.7569, df = 1, p-value = 0.01459


res <- prop.test(x = 5, n = 57, p = 0.122, correct = FALSE, alternative = "less") #PYO4.PYO65
res$p.value
#[1] 0.2145339
#X-squared = 0.62535, df = 1, p-value = 0.2145

res <- prop.test(x = 3, n = 57, p = 0.158, correct = FALSE, alternative = "less") #PYO45.PYO59
res$p.value
#[1] 0.01459029
#X-squared = 4.7569, df = 1, p-value = 0.01459




################
###5. Composition
################
library(vegan)
library(phyloseq)
library(tidyverse)
library(patchwork)
library(agricolae)
library(FSA)
library(rcompanion)
data.scores.sites=read.table("NMDS_coordinates_samples.txt",sep="\t",header=T)

table1=data.scores.sites
groups=read.table("groups_no_49.txt",header=T,sep="\t") ####not having 49
table2=left_join(table1,groups,by="SampleName")
table2$NMD1_position=with(table2, ifelse(table2$NMDS1 >0, "shifted","centered"))
table2$Phage_NMDS1=paste(table2$Phages,"_",table2$NMD1_position)
table2$Phage_NMDS1=sub(" ","", table2$Phage_NMDS1)
table2$Phage_NMDS1=sub(" ","", table2$Phage_NMDS1)


data_phylo_filt = filter_taxa(physeq, function(x) sum(x > 2) > (0.11 * length(x)), TRUE) ###at least in 11% samples which matches that couple of them have 11 replicates
set.seed(2747) # set seed for analysis reproducibility
OTU_filt_rar = rarefy_even_depth(otu_table(data_phylo_filt), rngseed = TRUE, replace = T) # rarefy the raw data using Phyloseq package
data_otu_filt_rar = data.frame(otu_table(OTU_filt_rar)) # create a separated file
data_phylo_filt_rar <- phyloseq(OTU_filt_rar, TAX, MD) 
to_remove <- c("JI1", "JI2", "JI3", "JI4", "JI5", "JI6", "BEFORE.1", "BEFORE.2", "BEFORE.3", "BEFORE.4", "BEFORE.5", "BEFORE.6")
data_phylo_filt_rar2 <- prune_samples(!(sample_names(data_phylo_filt_rar) %in% to_remove),data_phylo_filt_rar)
data_phylo_filt_rar<-data_phylo_filt_rar2 ###142 samples

####add table 2
table3=table2[,c(1,2,3,16,17)] ##"NMDS1","NMDS2","SampleName","NMD1_position","Phage_NMDS1"    

rownames(table3) <- table3$SampleName
# Turn into `sample_data` 
sam.new <- sample_data(table3)
head(sam.new)
data_phylo_filt_rar=merge_phyloseq(data_phylo_filt_rar, sam.new)

sample_data(data_phylo_filt_rar)$category3=factor(sample_data(data_phylo_filt_rar)$category3,levels=c("Negative_control","Healthy","Diseased"))
sample_data(data_phylo_filt_rar)$category_phages=factor(sample_data(data_phylo_filt_rar)$category_phages,levels=c("Negative_control","1-Phage_Healthy","1-Phage_Diseased","2-Phages_Healthy","2-Phages_Diseased","Rs.UW551_Healthy","Rs.UW551_Diseased"))
sample_data(data_phylo_filt_rar)$Phages=factor(sample_data(data_phylo_filt_rar)$Phages,levels=c("Negative_control","1-Phage","2-Phages","Rs.UW551"))
sample_data(data_phylo_filt_rar)$Phage_NMDS1=factor(sample_data(data_phylo_filt_rar)$Phage_NMDS1,levels=c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"))
 
######group by Phage_NMDS1

#####prepare data from rarefy data   https://scienceparkstudygroup.github.io/microbiome-lesson/07-bacterial-composition/index.html
data_taxo_filt_rar <- data.frame(m_tax[which(rownames(m_tax) %in% rownames(data_otu_filt_rar)),])
data_taxo_filt_rar$OTU_id <- rownames(data_taxo_filt_rar) # add the rownames in a column in order to be able to use it later with dplyr
metadata=data.frame(data_phylo_filt_rar@sam_data) ###dont do as.data.frame but instead dada.frame https://github.com/joey711/phyloseq/issues/190

data_grp_temp <- metadata
data_grp_temp$sample_id <- rownames(data_grp_temp) # to be able to use the column later with dplyr
data_otu_filt_rar_temp <- data.frame(t(data_otu_filt_rar))
data_otu_filt_rar_temp$sample_id <- rownames(data_otu_filt_rar_temp) # to be able to use the column later with dplyr
data_otu_grp_filt_rar <- inner_join(data_grp_temp, data_otu_filt_rar_temp, by = "sample_id")
data_otu_grp_filt_rar[1:5, 1:13] 
dim(data_otu_grp_filt_rar) #[1]  142 2765

data_otu_filt_rar_category <- aggregate(data_otu_grp_filt_rar[,19:2765], by = list(category=data_otu_grp_filt_rar$Phage_NMDS1), sum)
dim(data_otu_filt_rar_category) ###3 2748

# Transpose the full OTU data table, data_otu_filt_rar
data_otu_filt_rar_category_temp <- as.data.frame(t(as.matrix(data_otu_filt_rar_category[,2:dim(data_otu_filt_rar_category)[2]])))
colnames(data_otu_filt_rar_category_temp) <- data_otu_filt_rar_category[,1]
data_otu_filt_rar_category_temp$total_counts <- rowSums(data_otu_filt_rar_category_temp)
data_otu_filt_rar_category_temp$OTU_id <- rownames(data_otu_filt_rar_category_temp)
head(data_otu_filt_rar_category_temp)

# Combine the two OTU tables, the aggregated OTU table (data_otu_filt_rar_site_month_temp) with data_otu_filt_rar_t
data_otu_filt_rar_t <- as.data.frame(as.matrix(data_otu_filt_rar))
data_otu_filt_rar_t$OTU_id <- rownames(data_otu_filt_rar_t)
# Combine the two OTU tables, the aggregated OTU table (data_otu_filt_rar_site_month_temp) with data_otu_filt_rar_t
data_otu_filt_rar_temp <- inner_join(data_otu_filt_rar_category_temp, data_otu_filt_rar_t, by = "OTU_id")
data_otu_filt_rar_temp[1:5, 1:5]


# Combine the taxonomic table, data_taxo_filt_rar, with the new OTU table, data_otu_filt_rar_temp
data_otu_taxo_filt_rar <- inner_join(data_taxo_filt_rar, data_otu_filt_rar_temp, by = "OTU_id")
dim(data_otu_taxo_filt_rar)
data_otu_taxo_filt_rar[1:5, 1:5]
write.table(data_otu_taxo_filt_rar,"data_otu_taxo_filt_rar_Phages_NMDS1.txt",sep="\t")



######Rare phyla combine them
# Filter abundant Phyla
abundant_com <- data_otu_taxo_filt_rar %>%
  select(Class, total_counts) %>%
  group_by(Class) %>%
  summarize(total_counts_per_phylum = sum(total_counts)) %>%
  ungroup() %>%
  mutate(total_counts_percentage = total_counts_per_phylum / sum(total_counts_per_phylum) * 100) %>%
  filter(total_counts_percentage >= 1) %>%
  select(Class, total_counts_percentage)

# Compile rare Phyla
# Data table global communities simplified
rare_com <- tibble(Class=c("Rare_Phyla"),total_counts_percentage=100-sum(abundant_com$total_counts_percentage))
global_com <- bind_rows(abundant_com,rare_com)

# Sum per Phyla
com_per_treatment_phylum_temp <- aggregate(data_otu_taxo_filt_rar[, 10:15], by=list(Phylum=data_otu_taxo_filt_rar$Phylum), sum)

# Tidying the data set
com_per_treatment_phylum <- com_per_treatment_phylum_temp %>%
  gather(key   = treatment, value = obs_values,-Phylum)

library(paletteer)
paleteer1=paletteer_d("ggsci::default_igv")
write.table(com_per_treatment_phylum,"percentage_per_treatment_phylum_phages_NMDS1.txt",sep="\t")


# Barplot
tiff("Phylum_category_phages_barplot_NMDS1_pos_no_legend.tiff",res=300,he=180,wi=120,units="mm")
com_per_treatment_phylum %>%
  mutate(treatment = fct_relevel(treatment,"Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"  )) %>%
  ggplot(., aes(x = treatment, y = obs_values, fill = Phylum)) +
  geom_bar(position = "fill", stat = "identity", width = 0.9, color = "white") +
  theme(legend.title = element_blank(), legend.text = element_text(size = 15)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +scale_fill_manual(values=paleteer1)+
  labs(x= '', y= 'Phylum (%)')+
  theme(strip.text.x = element_text(size = 32))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme( strip.text.y = element_text(size = 100))+theme(legend.position = "none")
dev.off()


tiff("Phylum_category_phages_barplot_NMDS1_pos.tiff",res=300,he=200,wi=250,units="mm")
com_per_treatment_phylum %>%
  mutate(treatment = fct_relevel(treatment,"Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"  )) %>%
  ggplot(., aes(x = treatment, y = obs_values, fill = Phylum)) +
  geom_bar(position = "fill", stat = "identity", width = 0.9, color = "white") +
  theme(legend.title = element_blank(), legend.text = element_text(size = 15)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +scale_fill_manual(values=paleteer1)+
  labs(x= '', y= 'Proportion of the total counts - Phylum')+
  theme(strip.text.x = element_text(size = 30))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme( text = element_text(size = 25))
dev.off()

#######Calculate Relative abundance
dim(data_otu_taxo_filt_rar)
sum=sum(data_otu_taxo_filt_rar$total_counts)# [1] 10231384

data_otu_filter=data_otu_taxo_filt_rar [,c(1,17:170)]
data_otu_filter2=as.data.frame(t(data_otu_filter))
colnames(data_otu_filter2)=data_otu_filter2[1,]
data_otu_filter3=data_otu_filter2[-1,]
data_otu_filter3 <- mutate_all(data_otu_filter3, function(x) as.numeric(as.character(x)))###convert all numeric, have 154 samples, 55577 OTUs


data_otu_filter3$OTU_num=rownames(data_otu_filter3)
data_otu_filter4=data_otu_filter3 %>%
      mutate(across(-c(OTU_num) , ~ ./72052)) #####
data_otu_filter5=data_otu_filter4 %>%
      mutate(across(-c(OTU_num) , ~ .*100))
write.table(data_otu_filter5,"relative_2747_all_samples.txt",sep="\t")





##########
###6.Random forest
##########
library(randomForest)
library(vegan)
library(phyloseq)
library(tidyverse)
library(patchwork)
library(agricolae)
library(FSA)
library(rcompanion)

setwd("..")

load(file = "phyloseq.RData")

pruned <- prune_taxa(taxa_sums(physeq) > 0, physeq)
sample_data(pruned)$category <- factor(groups$category2)
OTU_table=as.data.frame(t(physeq@otu_table))

###########https://scienceparkstudygroup.github.io/microbiome-lesson/04-alpha-diversity/index.html
OTU_table2= transform_sample_counts(physeq@otu_table, as.integer)
OTU_table3=as.data.frame(t(OTU_table2))
data_phylo_filt = filter_taxa(physeq, function(x) sum(x > 2) > (0.11 * length(x)), TRUE) ###at least in 11% samples which matches that couple of them have 11 replicates
set.seed(2747) # set seed for analysis reproducibility
OTU_filt_rar = rarefy_even_depth(otu_table(data_phylo_filt), rngseed = TRUE, replace = T) # rarefy the raw data using Phyloseq package
data_otu_filt_rar = data.frame(otu_table(OTU_filt_rar)) # create a separated file
data_phylo_filt_rar <- phyloseq(OTU_filt_rar, TAX, MD) 

#####prepare data from rarefy data   https://scienceparkstudygroup.github.io/microbiome-lesson/07-bacterial-composition/index.html
data_taxo_filt_rar <- data.frame(m_tax[which(rownames(m_tax) %in% rownames(data_otu_filt_rar)),])
to_remove <- c("JI1", "JI2", "JI3", "JI4", "JI5", "JI6", "BEFORE.1", "BEFORE.2", "BEFORE.3", "BEFORE.4", "BEFORE.5", "BEFORE.6")
data_phylo_filt_rar2 <- prune_samples(!(sample_names(data_phylo_filt_rar) %in% to_remove),data_phylo_filt_rar)
data_phylo_filt_rar<-data_phylo_filt_rar2 ###142 samples


####add table 2 from NMDS results
table3=table2[,c(1,2,3,16,17)] ##"NMDS1","NMDS2","SampleName","NMD1_position","Phage_NMDS1"    

rownames(table3) <- table3$SampleName
# Turn into `sample_data` 
sam.new <- sample_data(table3)
head(sam.new)
data_phylo_filt_rar=merge_phyloseq(data_phylo_filt_rar, sam.new)

sample_data(data_phylo_filt_rar)$category3=factor(sample_data(data_phylo_filt_rar)$category3,levels=c("Negative_control","Healthy","Diseased"))
sample_data(data_phylo_filt_rar)$category_phages=factor(sample_data(data_phylo_filt_rar)$category_phages,levels=c("Negative_control","1-Phage_Healthy","1-Phage_Diseased","2-Phages_Healthy","2-Phages_Diseased","Rs.UW551_Healthy","Rs.UW551_Diseased"))
sample_data(data_phylo_filt_rar)$Phages=factor(sample_data(data_phylo_filt_rar)$Phages,levels=c("Negative_control","1-Phage","2-Phages","Rs.UW551"))
sample_data(data_phylo_filt_rar)$Phage_NMDS1=factor(sample_data(data_phylo_filt_rar)$Phage_NMDS1,levels=c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"))

data_taxo_filt_rar$OTU_id <- rownames(data_taxo_filt_rar) # add the rownames in a column in order to be able to use it later with dplyr

OTU_filt_rar2=subset(OTU_filt_rar, select = !(colnames(OTU_filt_rar) %in% to_remove))
OTUs_t = data.frame(t(OTU_filt_rar2))
dim(OTUs_t) #142 2747


groups=read.table("groups_no_49.txt",header=T,sep="\t") ####not having 49
table4=left_join(table3,data.scores.sites, by="SampleName")
groups<-table4
groups=groups[grep("1-Phage_centered|1-Phage_shifted|2-Phages_centered|2-Phages_shifted", groups$Phage_NMDS1),] ###118 49
groups$NMD1_position=factor(groups$NMD1_position,levels=c("centered","shifted"))

OTUs_t$names=rownames(OTUs_t)
rf.data = left_join(groups, OTUs_t,by=c("SampleName"="names")) 
rf.data2=rf.data[,c(4,8:2754)] ###NMD1_position and then the rest
dim(rf.data2) ##118 2748

####run the RF
set.seed(222)
ind <- sample(2, nrow(rf.data2), replace = TRUE, prob = c(0.7, 0.3))
train <-rf.data2[ind==1,]
dim(train) ##30 samples out of 47  
test <-rf.data2[ind==2,]

train$NMD1_position <- factor(train$NMD1_position,levels=c("centered","shifted"))
test$NMD1_position <- factor(test$NMD1_position,levels=c("centered","shifted"))

classify <- randomForest(NMD1_position~., data = train, ntree = 1000,proximity=TRUE)
print(classify)
Call:
# randomForest(formula = NMD1_position ~ ., data = train, ntree = 1000,      proximity = TRUE) 
#               Type of random forest: classification
#                     Number of trees: 1000
#No. of variables tried at each split: 52#

#        OOB estimate of  error rate: 0%
#Confusion matrix:
#          centered shifted class.error
#centered        52         0           0
#shifted        0        28           0


library(randomForest)
library(datasets)
library(caret)
p1 <- predict(classify, train)
confusionMatrix(p1, train$NMD1_position)
# Reference

#           Reference
#Prediction  centered shifted
#  centered        52         0
#  shifted        0        28
                                     
#               Accuracy : 1          
#                 95% CI : (0.9549, 1)
#    No Information Rate : 0.65       
#    P-Value [Acc > NIR] : 1.079e-15  
                                     
#                  Kappa : 1          
#                                     
# Mcnemar's Test P-Value : NA         
                                     
#            Sensitivity : 1.00       
#            Specificity : 1.00       
#         Pos Pred Value : 1.00       
#         Neg Pred Value : 1.00       
#             Prevalence : 0.65       
#         Detection Rate : 0.65       
#   Detection Prevalence : 0.65       
#      Balanced Accuracy : 1.00       
                                     
#       'Positive' Class : centered  

p2 <- predict(classify, test)
confusionMatrix(p2, test$NMD1_position)
#           Reference
#Prediction  centered shifted
#  centered        24         0
#  shifted        0        14
                                     
#               Accuracy : 1          
#                 95% CI : (0.9075, 1)
#    No Information Rate : 0.6316     
#    P-Value [Acc > NIR] : 2.608e-08  
                                     
#                  Kappa : 1          
                                     
# Mcnemar's Test P-Value : NA         
#                                     
#            Sensitivity : 1.0000     
#            Specificity : 1.0000     
#         Pos Pred Value : 1.0000     
#         Neg Pred Value : 1.0000     
#             Prevalence : 0.6316     
#         Detection Rate : 0.6316     
#   Detection Prevalence : 0.6316     
#      Balanced Accuracy : 1.0000     
#                                     
#       'Positive' Class : centered   



tiff("varImp.tiff",res=300,he=100,wi=100, units="mm")
imp=varImpPlot(classify,
           sort = T,
           n.var = 10,
           main = "Top 10 - Variable Importance")
dev.off()

color_table <-  tibble(
  Group_Name = c("centered","shifted"),
  Color = c("#DDCC77","#56B4E9")  )
library(RColorBrewer)
tiff("MDS_1_2.tiff",res=300,he=2000,wi=2000)
MDSplot(classify, train$NMD1_position,palette=c("#DDCC77","#56B4E9"),pch=19)
legend("topleft", legend=levels(classify$predicted),fill=c("#DDCC77","#56B4E9"))
dev.off()

#$GOF
#[1] 0.6445187 0.7597539




imp=as.data.frame(imp)
data_taxo_filt_rar <- data.frame(m_tax[which(rownames(m_tax) %in% rownames(OTU_filt_rar2)),])
imp$OTU_num<-rownames(imp)

imp_tax=left_join(imp,data_taxo_filt_rar,by="OTU_num")
write.table(imp_tax,"RF_NMDS1_gini_min_tax.txt",sep="\t")


imp_tax2=as.data.frame(imp_tax%>%group_by(Genus)%>% summarise(c_average_sum=sum(MeanDecreaseGini)))
write.table(imp_tax2,"RF_NMDS1_gini_min_tax_genus.txt",sep="\t")

imp_tax2=as.data.frame(imp_tax%>%group_by(Family)%>% summarise(MeanDecreaseGini_average_sum=sum(MeanDecreaseGini)))
write.table(imp_tax2,"RF_NMDS1_gini_min_tax_family.txt",sep="\t")
save.image(file = "RF_phages_NMDS1.RData")


#############NOW after reordering the genus files one in excel - combine them and plot them
###use imp2_tax
imp_tax2=read.table("RF_NMDS1_gini_min_tax_genus.txt",sep="\t",header=T)
Genus_to_keep=subset(imp_tax2, imp_tax2$c_average_sum>0.3)
Genus_to_keep=as.data.frame(Genus_to_keep)
dim(Genus_to_keep) ##23
Genus_to_keep=Genus_to_keep[-1,]
Genus_to_keep$c_average_sum=round(Genus_to_keep$c_average_sum,digits=2)
Genus_to_keep$Genus=sub("Burkholderia-Caballeronia-Paraburkholderia", "Burkholderia_sp.",Genus_to_keep$Genus)
Genus_to_keep<- Genus_to_keep[order(Genus_to_keep$c_average_sum),]
Genus_to_keep$Genus=factor(Genus_to_keep$Genus,levels=unique(Genus_to_keep$Genus))

###Genus_to_keep$Genus=factor(Genus_to_keep$Genus, levels=c("Lactobacillus","Sphingomonas","Pseudomonas","Rhodanobacter","Gemmatimonas","0319-6G20","Pseudolabrys","Snodgrassella","Xanthomonas","Gilliamella","Oceanibaculum","Devosia","Luteimonas","Bifidobacterium","Kapabacteriales","Weissella","SWB02","Terrimonas","Neisseria","Arenimonas","Burkholderia_sp.","Legionella"))

tiff("RF_barplot.tiff",res=300,he=200,wi=200,units="mm")
ggplot(Genus_to_keep, 
       aes(x = Genus, y = c_average_sum,fill="grey60")) + 
  geom_col() +
 geom_text(aes(label = c_average_sum),
            position = position_stack(vjust = 0.5), size = 4) +
  labs(x = "Genera", y = "Mean Gini") +
  theme(plot.title = element_text(face = "bold")) + theme(legend.position = "none")+
  coord_flip() +scale_fill_manual(values =c("grey60"))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme(text = element_text(size = 15))
dev.off()



##########
###7. Plot random forest genus according to shifted and centered microbiomes
##########

data_phylo_filt = filter_taxa(physeq, function(x) sum(x > 2) > (0.11 * length(x)), TRUE) ###at least in 11% samples which matches that couple of them have 11 replicates
set.seed(2747) # set seed for analysis reproducibility
OTU_filt_rar = rarefy_even_depth(otu_table(data_phylo_filt), rngseed = TRUE, replace = T) # rarefy the raw data using Phyloseq package
data_otu_filt_rar = data.frame(otu_table(OTU_filt_rar)) # create a separated file
data_phylo_filt_rar <- phyloseq(OTU_filt_rar, TAX, MD) 
data_taxo_filt_rar <- data.frame(m_tax[which(rownames(m_tax) %in% rownames(data_otu_filt_rar)),])
to_remove <- c("JI1", "JI2", "JI3", "JI4", "JI5", "JI6", "BEFORE.1", "BEFORE.2", "BEFORE.3", "BEFORE.4", "BEFORE.5", "BEFORE.6")
"FERA.133",
"FERA.136",
"FERA.137",
"FERA.138",
"FERA.140",
"FERA.142",
"FERA.144",
"FERA.134",
"FERA.135",
"FERA.139",
"FERA.141",
"FERA.143",
"FERA.121",
"FERA.122",
"FERA.123",
"FERA.124",
"FERA.125",
"FERA.126",
"FERA.127",
"FERA.128",
"FERA.129",
"FERA.130",
"FERA.131",
"FERA.132"
###remove negative control and Rs treated samples

data_phylo_filt_rar2 <- prune_samples(!(sample_names(data_phylo_filt_rar) %in% to_remove),data_phylo_filt_rar)
data_phylo_filt_rar<-data_phylo_filt_rar2 ###142 samples

data.scores.sites=read.table("NMDS_coordinates_samples.txt",sep="\t",header=T)

table1=data.scores.sites
groups=read.table("groups_no_49.txt",header=T,sep="\t") ####not having 49
table2=left_join(table1,groups,by="SampleName")
table2$NMD1_position=with(table2, ifelse(table2$NMDS1 >0, "shifted","centered"))
table2$Phage_NMDS1=paste(table2$Phages,"_",table2$NMD1_position)
table2$Phage_NMDS1=sub(" ","", table2$Phage_NMDS1)
table2$Phage_NMDS1=sub(" ","", table2$Phage_NMDS1)

####add table 2 from NMDS results
table3=table2[,c(1,2,3,16,17)] ##"NMDS1","NMDS2","SampleName","NMD1_position","Phage_NMDS1"    

rownames(table3) <- table3$SampleName
# Turn into `sample_data` 
sam.new <- sample_data(table3)
head(sam.new)
data_phylo_filt_rar=merge_phyloseq(data_phylo_filt_rar, sam.new)

sample_data(data_phylo_filt_rar)$category3=factor(sample_data(data_phylo_filt_rar)$category3,levels=c("Negative_control","Healthy","Diseased"))
sample_data(data_phylo_filt_rar)$category_phages=factor(sample_data(data_phylo_filt_rar)$category_phages,levels=c("Negative_control","1-Phage_Healthy","1-Phage_Diseased","2-Phages_Healthy","2-Phages_Diseased","Rs.UW551_Healthy","Rs.UW551_Diseased"))
sample_data(data_phylo_filt_rar)$Phages=factor(sample_data(data_phylo_filt_rar)$Phages,levels=c("Negative_control","1-Phage","2-Phages","Rs.UW551"))
sample_data(data_phylo_filt_rar)$Phage_NMDS1=factor(sample_data(data_phylo_filt_rar)$Phage_NMDS1,levels=c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"))


data_otu_filt_rar=data_phylo_filt_rar@otu_table ###118 samples 2747 rows 
data_otu_filt_rar=as.data.frame(data_otu_filt_rar)
#####prepare data from rarefy data   https://scienceparkstudygroup.github.io/microbiome-lesson/07-bacterial-composition/index.html
data_taxo_filt_rar <- data.frame(m_tax[which(rownames(m_tax) %in% rownames(data_otu_filt_rar)),])
data_taxo_filt_rar$OTU_id <- rownames(data_taxo_filt_rar) # add the rownames in a column in order to be able to use it later with dplyr
metadata=data.frame(data_phylo_filt_rar@sam_data) ###dont do as.data.frame but instead dada.frame https://github.com/joey711/phyloseq/issues/190

data_grp_temp <- metadata
data_grp_temp$sample_id <- rownames(data_grp_temp) # to be able to use the column later with dplyr
data_otu_filt_rar$OTU_id<-rownames(data_otu_filt_rar)
data_otu_filt_rar_join=left_join(data_otu_filt_rar, data_taxo_filt_rar, by="OTU_id")


imp_tax2=read.table("RF_NMDS1_gini_min_tax_genus.txt",sep="\t",header=T)
Genus_to_keep=subset(imp_tax2, imp_tax2$c_average_sum>0.3)
Genus_to_keep=as.data.frame(Genus_to_keep)
dim(Genus_to_keep) ##23
Genus_to_keep=Genus_to_keep[-1,]
Genus_to_keep$c_average_sum=round(Genus_to_keep$c_average_sum,digits=2)
keep=Genus_to_keep$Genus
keep=c("Ralstonia", keep)

data_filt=data_otu_filt_rar_join[data_otu_filt_rar_join$Genus %in% keep, ]
data_filt ##218 151
write.table(data_filt,"filt_Genus_RF.txt",sep="\t")
rownames(data_filt)<-data_filt$OTU_num
data_filt2=data_filt[,c(1:142,150)] #########all samples and Genus check is correct
######Group by
library(dplyr)
data_filt2 <- data_filt2 %>% group_by(Genus) %>% summarise_each(funs(sum)) %>%   as.data.frame()

####data_filt2 <- data_filt2 %>% group_by(Genus) %>% summarise(sum) %>%   as.data.frame()
write.table(data_filt2,"filt_Genus_RF2.txt",sep="\t")
#data_filt2=read.table("filt_Genus_RF2.txt",sep="\t")

data_otu_filt_rar_temp <- data.frame(t(data_filt2))
colnames(data_otu_filt_rar_temp)=data_otu_filt_rar_temp[1,]
data_otu_filt_rar_temp=data_otu_filt_rar_temp[-1,]
data_otu_filt_rar_temp$sample_id <- rownames(data_otu_filt_rar_temp) # to be able to use the column later with dplyr
data_otu_grp_filt_rar <- inner_join(data_grp_temp, data_otu_filt_rar_temp, by = "sample_id")
data_otu_grp_filt_rar[1:5, 1:15] ####142 38
write.table(data_otu_grp_filt_rar,"RF_topall_samples_final_genus.txt",sep="\t")

data_otu_grp_filt_rar=read.table("RF_topall_samples_final_genus.txt",sep="\t",header=T)
table=data_otu_grp_filt_rar
keep=Genus_to_keep$Genus
keep=c("Ralstonia", keep)

names<-keep ####4 is number of interest genes
names=sub("Burkholderia-Caballeronia-Paraburkholderia", "Burkholderia_sp.",names)
names=sub("0319-6G20", "Genus_0319_6G20",names)
colnames(table)=sub("Burkholderia.Caballeronia.Paraburkholderia", "Burkholderia_sp.",colnames(table))
colnames(table)=sub("X0319.6G20", "Genus_0319_6G20",colnames(table))



table[,c(19:41)] <- sapply(table[,c(19:41)], as.numeric)
table$Phages=factor(table$Phages,levels=c("Negative_control","1-Phage","2-Phages","Rs.UW551"))
table$category3=factor(table$category3,levels=c("Negative_control","Healthy","Diseased"))
table$category_phages=factor(table$category_phages,levels=c("Negative_control","1-Phage_Healthy","1-Phage_Diseased","2-Phages_Healthy","2-Phages_Diseased","Rs.UW551_Healthy","Rs.UW551_Diseased"))
table$Phage_NMDS1=factor(table$Phage_NMDS1,levels=c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"))


#######Plots
library(tidyverse)
library(ggpubr)
library(rstatix)
library(multcomp)
library(FSA)
library(ggpubr)
library(rcompanion)
library(flextable)

color_table <-  tibble(
  Group_Name = c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"),
  Color = c("#666666","#E69F00","#D55E00","#6699CC","#0072B2","#882255"))

anova=list()
model=list()
shapiro=list()
res.kruskal=list()
for (i in names) {

table$Phage_NMDS1=sub("1-Phage","1.Phage",table$Phage_NMDS1)
table$Phage_NMDS1=sub("2-Phages","2.Phages",table$Phage_NMDS1)
model[[i]]  <- lm(table[[i]] ~ Phage_NMDS1, data = table)
shapiro[[i]]=shapiro_test(residuals(model[[i]])) ###all are non-normally distributed
res.kruskal[[i]] <- table %>% kruskal_test(table[[i]] ~ Phage_NMDS1)
res.kruskal [[i]]

pwc2 <- dunnTest(table[[i]]  ~ Phage_NMDS1,data=table,method="bonferroni")
pwc2_res <- pwc2$res
cld <- cldList(comparison = pwc2_res$Comparison,
        p.value    = pwc2_res$P.adj,
        threshold  = 0.05)[1:2]
names(cld)[1]<-"Phage_NMDS1" # change the name of grouping factor according to the dataset (df)
cld

cld$Phage_NMDS1=sub("1.Phage","1-Phage",cld$Phage_NMDS1)
cld$Phage_NMDS1=sub("2.Phages","2-Phages",cld$Phage_NMDS1)


cld$Phage_NMDS1=factor(cld$Phage_NMDS1,levels=c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"))
ylabel = substitute(expr = paste(italic(i), " abundance (counts)"),
 env = list(i=i))

ylim=1.1*max(table[[i]])
ylim2=1.05*max(table[[i]])
ylim3=min(table[[i]])

table$Phage_NMDS1=sub("1.Phage","1-Phage",table$Phage_NMDS1)
table$Phage_NMDS1=sub("2.Phages","2-Phages",table$Phage_NMDS1)

table$Phage_NMDS1=factor(table$Phage_NMDS1,levels=c("Negative_control_centered","1-Phage_centered","1-Phage_shifted","2-Phages_centered","2-Phages_shifted", "Rs.UW551_centered"))

tiff(filename = paste(i, "Phages_NMDS1_position.tiff",sep = ""),res=300,he=100,wi=100,units="mm")
p=ggboxplot(data=table, x = "Phage_NMDS1", y=i,
  fill = "Phage_NMDS1")+ theme_bw() +ylim(ylim3,ylim)+
  geom_text(data = cld, aes(label = cld$Letter, y = ylim2, x = Phage_NMDS1), 
            vjust = -0.5,
            hjust= 0.5,
            fontface = "bold",
            size=5.0,
             check_overlap = F)+scale_fill_manual(values = color_table$Color)+
  scale_x_discrete(labels = NULL, breaks = NULL) +   ylab(ylabel)+xlab("Treatments")+
 theme(strip.text.x = element_text(size = 20))+ theme(strip.text.y = element_text(size = 13))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+theme(legend.position="none")
###+ theme( text = element_text(size = 10))
print(p)
dev.off()

}

