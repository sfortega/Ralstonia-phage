#########
1. Disease glasshouse experiment
#########
data <- read.table("scores.txt", header = T, sep = "\t")
groups=read.table("groups_for_disease.txt",header=T,sep="\t") ####not having 49


# convert phage code names to actual names
library(tidyverse)
library(Rmisc)
#library(grafify)
library(flux)
library(car)
data$Treatment_decoded <- case_when(data$Treatment == "P1" ~ "PY04",
                                    data$Treatment == "P2" ~ "PY045",
                                    data$Treatment == "P3" ~ "PY059",
                                    data$Treatment == "P4" ~ "PY065",
                                    data$Treatment == "P1P2" ~ "PY04.PY045",
                                    data$Treatment == "P1P3" ~ "PY04.PY059",
                                    data$Treatment == "P1P4" ~ "PY04.PY065",
                                    data$Treatment == "P2P3" ~ "PY045.PY059",
                                    data$Treatment == "P2P4" ~ "PY045.PY065",
                                    data$Treatment == "P3P4" ~ "PY059.PY065",
                                    data$Treatment == "UW551" ~ "Rs.UW551",
                                    data$Treatment == "C-" ~ "Control"
                                    )

# Change the order of levels in Treatment_decoded column
data$Treatment_decoded <- factor(data$Treatment_decoded, 
                                 levels = c("Control","PY04","PY045","PY059","PY065","PY04.PY045","PY04.PY059","PY04.PY065","PY045.PY059","PY045.PY065","PY059.PY065","Rs.UW551"))


# correct spelling mistake in disease_index column name
names(data)[6] <- "Disease_Index"

# add new column indicating whether phage treatments are single or combination treatment
data$Treatment_phagenum <- case_when(data$Treatment_decoded == "PY04" ~ "Individual",
                                     data$Treatment_decoded == "PY045" ~ "Individual",
                                     data$Treatment_decoded == "PY059" ~ "Individual",
                                     data$Treatment_decoded == "PY065" ~ "Individual",
                                     data$Treatment_decoded == "PY04.PY045" ~ "Double",
                                     data$Treatment_decoded == "PY04.PY059" ~ "Double",
                                     data$Treatment_decoded == "PY04.PY065" ~ "Double",
                                     data$Treatment_decoded == "PY045.PY059" ~ "Double",
                                     data$Treatment_decoded == "PY045.PY065" ~ "Double",
                                     data$Treatment_decoded == "PY059.PY065" ~ "Double",
                                     data$Treatment_decoded == "Rs.UW551" ~ "Rs.UW551",
                                     data$Treatment_decoded == "Control" ~ "Negative_Control"
)

data$Treatment_phagenum <- factor(data$Treatment_phagenum, 
                                 levels = c("Negative_Control", "Individual", "Double", "Rs.UW551"))

data$SampleName=paste("FERA.",data$Plant.ID)
data$SampleName=sub(" ","", data$SampleName)
data2=left_join(data,groups,by="SampleName")

color_table2 <-  tibble(
  Treatment = c("Control","PY04","PY045","PY059","PY065","PY04.PY045","PY04.PY059","PY04.PY065","PY045.PY059","PY045.PY065","PY059.PY065","Rs.UW551"),
  Color = c("#777777","#CC6677","#AA4499","#6699CC","#332288","#DDCC77","#117733","#661100","#44AA99", "#0072B2","#D55E00" ,"black"))

data_summary <- summarySE(data = data2, measurevar = "Disease_Index", 
                          groupvars = c("Time_DPI", "Treatment_decoded", "Treatment_phagenum"),
                          na.rm = FALSE, conf.interval = 0.95, .drop = TRUE)
tiff("DI_average2.tiff",res=300,he=200,wi=200,units="mm")
ggplot(data = data_summary, aes(x = Time_DPI, y = Disease_Index, 
                                          group = Treatment_decoded, col = Treatment_decoded)) +
    geom_line(size = 1)  +
       labs(x = "Time (DPI)",
         y = "Disease Index",
         col = "Treatment") +scale_colour_manual(values = color_table2$Color)+
    theme_bw()+
    theme(panel.grid.major.x = element_blank(),
          panel.grid.minor.x = element_blank(),
          panel.grid.major.y = element_blank(),
          panel.grid.minor.y = element_blank())+ theme( text = element_text(size = 25))
dev.off()

##################Calcualte Area under the diseased curve - AUC
library(DescTools)
data_AUC <- data

# this uses a loop. Each interation of the loop will make a subset of the data for 1 curve, then calculates the AUC from it.
for(i in 1:NROW(data_AUC)){
  #subset of data and make a mini dataframe called asub.
  # I can just pull out the rows from the "data" dataframe where the Plant.ID code matches the Plant.ID code in the specified row (i) of the new summary dataframe
  asub <- data[data$Plant.ID == data_AUC[i,"Plant.ID"], ]
  # use the subsetted data to calculate auc (flux package)
  data_AUC[i, "AUC"] <- AUC(asub[ ,"Time_DPI"], asub[ ,"Disease_Index"])
}


# average AUC score across treatments
data_AUC_summary <- summarySE(data_AUC, measurevar = "AUC", groupvars = c("Treatment_decoded"))

# AUC plot and stats ----------

data_AUC$Treatment_decoded=factor(data_AUC$Treatment_decoded,levels=c("Control","PY04","PY045","PY059","PY065","PY04.PY045","PY04.PY059","PY04.PY065","PY045.PY059","PY045.PY065","PY059.PY065","Rs.UW551"))

#########Plots and stats comparing the different phage treatments using AUC as variable
library(FSA)
library(rcompanion)
model  <- lm(AUC ~ Treatment, data = data_AUC)
shapiro_test(residuals(model)) ####non normally distributed 
####no ANOVA use KRUSKALL WALLIs
res.kruskal <- data_AUC %>% kruskal_test(AUC ~ Treatment)
res.kruskal
##AUC    2160      284.    11 1.76e-54 Kruskal-Wallis

pwc2 <- dunnTest(AUC ~ Treatment_decoded,data=data_AUC,method="bonferroni")
pwc2_res <- pwc2$res
cld <- cldList(comparison = pwc2_res$Comparison,
        p.value    = pwc2_res$P.adj,
        threshold  = 0.05)[1:2]
names(cld)[1]<-"Treatment" # change the name of grouping factor according to the dataset (df)
cld

library(ggpubr)
cld$Treatment=c("Control", "PY04","PY04.PY045","PY04.PY059","PY04.PY065","PY045","PY045.PY059","PY045.PY065","PY059","PY059.PY065","PY065","Rs.UW551")
cld$Treatment=factor(cld$Treatment,levels=c("Control","PY04","PY045","PY059","PY065","PY04.PY045","PY04.PY059","PY04.PY065","PY045.PY059","PY045.PY065","PY059.PY065","Rs.UW551"))
ylim1=1.5*(max(data_AUC$AUC))
ylim2=1.2*(max(data_AUC$AUC))
tiff("AUC_stats_combinations_letters.tiff",res=300,he=300,wi=300,units="mm")
 ggboxplot(data=data_AUC, x = "Treatment_decoded", y = "AUC",
  fill = "Treatment_decoded")+ theme_bw() +ylim(0,ylim1)+
  geom_text(data = cld, aes(label = cld$Letter, y = ylim2, x = Treatment), 
            vjust = -0.5,
            hjust= 0.5,
            fontface = "bold",
            size=8.5,
            check_overlap = F)+scale_fill_manual(values = color_table2$Color)+
  xlab("Treatments")+   ylab("Area under the diseased curve")+
  ggtitle("Area under the diseased curve")+ theme(strip.text.x = element_text(size = 30))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme( text = element_text(size = 25))
dev.off()



#################BARPLOT of the number diseased and healthy at the end of the experiment
data$SampleName=paste("FERA.",data$Plant.ID)
data$SampleName=sub(" ","", data$SampleName)


data3=subset(data2,data2$Time_DPI==21)
data4=data3 %>% group_by(Treatment_decoded, category3)  %>%     dplyr::summarise(count=n())


##color_table <-  tibble(
##  Group_Name = c( "Compost","Control","Phages_diseased","Phages_healthy","Rs_diseased","Rs_healthy"),
##  Color = c("#777777","black","#332288","#DDCC77","#661100","#56B4E9")  )
color_table <-  tibble(
  Group_Name = c( "Compost","Control","Phages_diseased","Phages_healthy","Rs_diseased","Rs_healthy"),
  Color = c("#888888","#666666","#0072B2","#88CCEE","#661100","#CC6677")  )

data4=as.data.frame(data4)
data4$category3=sub("Disease","Diseased",data4$category3)
data4$category3=factor(data4$category3,levels=c("Control","Healthy","Diseased"))

tiff("barplot_DI.tiff",res=300,he=300,wi=300,units="mm")
ggplot(data=data4, aes(x=Treatment_decoded, y=count,fill=category3)) +
geom_bar(stat="identity", position="stack") +
    scale_fill_manual(values=c("#777777","#DDCC77","#332288")) +
    ggtitle("Number of Diseased and Healthy plants") +
       labs(x = "Treatment",
         y = "Counts")+ theme(strip.text.x = element_text(size = 30))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ theme( text = element_text(size = 25))
dev.off()


##################T.TESTs
data_AUC2=data_AUC[grep("PY04|PY04.PY065",data_AUC$Treatment_decoded),]
data_AUC2=data_AUC2[-grep("PY045|PY04.PY045|PY04.PY059",data_AUC2$Treatment_decoded),] 
data_AUC2$Treatment_decoded=factor(data_AUC2$Treatment_decoded,levels=c("PY04","PY04.PY065"))
stat.test <- data_AUC2 %>% 
  t_test(AUC ~ Treatment_decoded) %>%
  add_significance()
stat.test

###Results
#  .y.   group1 group2        n1    n2 statistic    df     p p.signif
#  <chr> <chr>  <chr>      <int> <int>     <dbl> <dbl> <dbl> <chr>   
#1 AUC   PY04   PY04.PY065   180   180      1.56  350. 0.119 ns      


##################T.TESTs
data_AUC2=data_AUC[grep("PY065|PY04.PY065",data_AUC$Treatment_decoded),]
data_AUC2=data_AUC2[-grep("PY045|PY04.PY045|PY04.PY059|PY059.PY065",data_AUC2$Treatment_decoded),] 
data_AUC2$Treatment_decoded=factor(data_AUC2$Treatment_decoded,levels=c("PY065","PY04.PY065"))
stat.test <- data_AUC2 %>% 
  t_test(AUC ~ Treatment_decoded) %>%
  add_significance()
stat.test

###Results
#  .y.   group1 group2        n1    n2 statistic    df     p p.signif
#  <chr> <chr>  <chr>      <int> <int>     <dbl> <dbl> <dbl> <chr>   
#1 AUC   PY065  PY04.PY065   180   180      1.42  340. 0.157 ns 


##################T.TESTs
data_AUC2=data_AUC%>%filter(Treatment_decoded=="PY04" | Treatment_decoded=="PY04.PY045")
data_AUC2$Treatment_decoded=factor(data_AUC2$Treatment_decoded,levels=c("PY04","PY04.PY045"))
stat.test <- data_AUC2 %>% 
  t_test(AUC ~ Treatment_decoded) %>%
  add_significance()
stat.test

#  .y.   group1 group2        n1    n2 statistic    df        p p.signif
#  <chr> <chr>  <chr>      <int> <int>     <dbl> <dbl>    <dbl> <chr>   
#1 AUC   PY04   PY04.PY045   180   180      3.33  333. 0.000954 ***    

##################T.TESTs
data_AUC2=data_AUC%>%filter(Treatment_decoded=="PY045" | Treatment_decoded=="PY04.PY045")
data_AUC2$Treatment_decoded=factor(data_AUC2$Treatment_decoded,levels=c("PY045","PY04.PY045"))
stat.test <- data_AUC2 %>% 
  t_test(AUC ~ Treatment_decoded) %>%
  add_significance()
stat.test

###Results
#  .y.   group1 group2        n1    n2 statistic    df     p p.signif
#  <chr> <chr>  <chr>      <int> <int>     <dbl> <dbl> <dbl> <chr>   
#1 AUC   PY045  PY04.PY045   180   180      1.50  323. 0.134 ns      




##################T.TESTs
data_AUC2=data_AUC%>%filter(Treatment_decoded=="PY045" | Treatment_decoded=="PY045.PY065")
data_AUC2$Treatment_decoded=factor(data_AUC2$Treatment_decoded,levels=c("PY045","PY045.PY065"))
stat.test <- data_AUC2 %>% 
  t_test(AUC ~ Treatment_decoded) %>%
  add_significance()
stat.test

###Results
#  .y.   group1 group2         n1    n2 statistic    df      p p.signif
#  <chr> <chr>  <chr>       <int> <int>     <dbl> <dbl>  <dbl> <chr>   
#1 AUC   PY045  PY045.PY065   180   180     -2.32  351. 0.0207 *   


##################T.TESTs
data_AUC2=data_AUC%>%filter(Treatment_decoded=="PY065" | Treatment_decoded=="PY045.PY065")
data_AUC2$Treatment_decoded=factor(data_AUC2$Treatment_decoded,levels=c("PY065","PY045.PY065"))
stat.test <- data_AUC2 %>% 
  t_test(AUC ~ Treatment_decoded) %>%
  add_significance()
stat.test

###Results
#   .y.   group1 group2         n1    n2 statistic    df     p p.signif
#  <chr> <chr>  <chr>       <int> <int>     <dbl> <dbl> <dbl> <chr>   
#1 AUC   PY065  PY045.PY065   180   180    -0.814  349. 0.416 ns 
